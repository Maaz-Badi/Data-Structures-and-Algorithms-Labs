import pytest
import sys
import os

sys.path.append(os.path.join(os.path.dirname(__file__), ".."))

from q3 import GetShortestPathGrid
testcases = [
    (   
        [[1, 1], [-1, 1]],
        [
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1)]
        ]
    ),
    (
        [[1, 1, 1], [-1, 1, 1], [1, -1, 1]],
        [
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (1, 2), 1), ((1, 2), (2, 2), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (0, 2), 1), ((0, 2), (1, 2), 1), ((1, 2), (2, 2), 1)]
        ]
    ),
    (
        [[1, 1, 1, -1], [1, 1, 1, -1], [1, 1, 1, 1], [-1, 1, 1, 1]],
        [
            [((0, 0), (1, 0), 1), ((1, 0), (2, 0), 1), ((2, 0), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1)],
            [((0, 0), (1, 0), 1), ((1, 0), (2, 0), 1), ((2, 0), (2, 1), 1), ((2, 1), (2, 2), 1), ((2, 2), (3, 2), 1), ((3, 2), (3, 3), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (2, 0), 1), ((2, 0), (2, 1), 1), ((2, 1), (2, 2), 1), ((2, 2), (2, 3), 1), ((2, 3), (3, 3), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (2, 2), 1), ((2, 2), (3, 2), 1), ((3, 2), (3, 3), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (2, 2), 1), ((2, 2), (2, 3), 1), ((2, 3), (3, 3), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (1, 2), 1), ((1, 2), (2, 2), 1), ((2, 2), (3, 2), 1), ((3, 2), (3, 3), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (1, 2), 1), ((1, 2), (2, 2), 1), ((2, 2), (2, 3), 1), ((2, 3), (3, 3), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (2, 2), 1), ((2, 2), (3, 2), 1), ((3, 2), (3, 3), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (2, 2), 1), ((2, 2), (2, 3), 1), ((2, 3), (3, 3), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (1, 2), 1), ((1, 2), (2, 2), 1), ((2, 2), (3, 2), 1), ((3, 2), (3, 3), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (1, 2), 1), ((1, 2), (2, 2), 1), ((2, 2), (2, 3), 1), ((2, 3), (3, 3), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (0, 2), 1), ((0, 2), (1, 2), 1), ((1, 2), (2, 2), 1), ((2, 2), (3, 2), 1), ((3, 2), (3, 3), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (0, 2), 1), ((0, 2), (1, 2), 1), ((1, 2), (2, 2), 1), ((2, 2), (2, 3), 1), ((2, 3), (3, 3), 1)]
        ]
    ),
    (
        [[1, 1, 1, -1, 1], [1, 1, -1, 1, 1], [1, 1, -1, 1, 1], [-1, 1, 1, 1, 1], [-1, 1, 1, 1, 1]],
        [
            [((0, 0), (1, 0), 1), ((1, 0), (2, 0), 1), ((2, 0), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (4, 1), 1), ((4, 1), (4, 2), 1), ((4, 2), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (2, 0), 1), ((2, 0), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (4, 2), 1), ((4, 2), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (2, 0), 1), ((2, 0), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1), ((3, 3), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (2, 0), 1), ((2, 0), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1), ((3, 3), (3, 4), 1), ((3, 4), (4, 4), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (4, 1), 1), ((4, 1), (4, 2), 1), ((4, 2), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (4, 2), 1), ((4, 2), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1), ((3, 3), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (1, 0), 1), ((1, 0), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1), ((3, 3), (3, 4), 1), ((3, 4), (4, 4), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (4, 1), 1), ((4, 1), (4, 2), 1), ((4, 2), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (4, 2), 1), ((4, 2), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1), ((3, 3), (4, 3), 1), ((4, 3), (4, 4), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (1, 1), 1), ((1, 1), (2, 1), 1), ((2, 1), (3, 1), 1), ((3, 1), (3, 2), 1), ((3, 2), (3, 3), 1), ((3, 3), (3, 4), 1), ((3, 4), (4, 4), 1)]
        ]
    ),
    (
        [[1, 1, 1, -1, 1, 1], [1, -1, 1, 1, 1, 1], [-1, 1, 1, -1, 1, 1], [1, 1, -1, 1, 1, 1], [1, -1, 1, 1, 1, 1], [1, 1, -1, 1, 1, 1]],
        [
            [((0, 0), (0, 1), 1), ((0, 1), (0, 2), 1), ((0, 2), (1, 2), 1), ((1, 2), (1, 3), 1), ((1, 3), (1, 4), 1), ((1, 4), (2, 4), 1), ((2, 4), (3, 4), 1), ((3, 4), (4, 4), 1), ((4, 4), (5, 4), 1), ((5, 4), (5, 5), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (0, 2), 1), ((0, 2), (1, 2), 1), ((1, 2), (1, 3), 1), ((1, 3), (1, 4), 1), ((1, 4), (2, 4), 1), ((2, 4), (3, 4), 1), ((3, 4), (4, 4), 1), ((4, 4), (4, 5), 1), ((4, 5), (5, 5), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (0, 2), 1), ((0, 2), (1, 2), 1), ((1, 2), (1, 3), 1), ((1, 3), (1, 4), 1), ((1, 4), (2, 4), 1), ((2, 4), (3, 4), 1), ((3, 4), (3, 5), 1), ((3, 5), (4, 5), 1), ((4, 5), (5, 5), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (0, 2), 1), ((0, 2), (1, 2), 1), ((1, 2), (1, 3), 1), ((1, 3), (1, 4), 1), ((1, 4), (2, 4), 1), ((2, 4), (2, 5), 1), ((2, 5), (3, 5), 1), ((3, 5), (4, 5), 1), ((4, 5), (5, 5), 1)], 
            [((0, 0), (0, 1), 1), ((0, 1), (0, 2), 1), ((0, 2), (1, 2), 1), ((1, 2), (1, 3), 1), ((1, 3), (1, 4), 1), ((1, 4), (1, 5), 1), ((1, 5), (2, 5), 1), ((2, 5), (3, 5), 1), ((3, 5), (4, 5), 1), ((4, 5), (5, 5), 1)]
        ]
    )
]

@pytest.mark.parametrize("i", range(len(testcases)))
def test_GetShortestPathGrid(i):
    assert GetShortestPathGrid(testcases[i][0], (0, 0), (len(testcases[i][0])-1,len(testcases[i][0][0])-1)) in testcases[i][1]