import pytest
import sys
import os

sys.path.append(os.path.join(os.path.dirname(__file__), ".."))

from q1 import *

test_cases =[
    ([('A', 1), ('B', 2), ('C', 3), ('D', 4), ('E', 5), ('F', 6), ('G', 7)], [('B', 2), ('C', 3), ('D', 4), ('E', 5), ('F', 6), ('G', 7)], 'A'),
    ([('B', 2), ('C', 3), ('D', 4), ('E', 5), ('F', 6), ('G', 7)], [('C', 3), ('D', 4), ('E', 5), ('F', 6), ('G', 7)], 'B'),
    ([('C', 3), ('D', 4), ('E', 5), ('F', 6), ('G', 7)], [('D', 4), ('E', 5), ('F', 6), ('G', 7)], 'C'),
    ([('D', 4), ('E', 5), ('F', 6), ('G', 7)], [('E', 5), ('F', 6), ('G', 7)], 'D'),
    ([('E', 5), ('F', 6), ('G', 7)], [('F', 6), ('G', 7)], 'E'),
    ([('F', 6), ('G', 7)], [('G', 7)], 'F'),
    ([('A', 1), ('B', 5), ('C', 10)], [('B', 5), ('C', 10)], 'A'),
    ([('X', 2), ('Y', 3), ('Z', 1)], [('X', 2), ('Y', 3)], 'Z'),
    ([('A', 10), ('B', 2), ('C', 5)], [('A', 10), ('C', 5)], 'B'),
    ([('A', 4), ('B', 1), ('C', 3)], [('A', 4), ('C', 3)], 'B'),
    ([('B', 1), ('A', 5)], [('A', 5)], 'B'),
    ([('A', 2), ('B', 2), ('C', 2)], [('B', 2), ('C', 2)], 'A'),
    ([('A', 3), ('B', 3), ('C', 3)], [('B', 3), ('C', 3)], 'A'),
    ([('A', 1)], [], 'A'),
    ([('B', 10)], [], 'B'),
    ([('A', 1), ('B', 2), ('C', 3), ('D', 4)], [('B', 2), ('C', 3), ('D', 4)], 'A'),
    ([('A', 1), ('B', 2), ('C', 3), ('D', 4), ('E', 5)], [('B', 2), ('C', 3), ('D', 4), ('E', 5)], 'A'),
    ([('A', 5), ('B', 4), ('C', 3), ('D', 2), ('E', 1)], [('A', 5), ('B', 4), ('C', 3), ('D', 2)], 'E'),
    ([('F', 7), ('E', 6), ('D', 5), ('C', 4), ('B', 3), ('A', 2)], [('F', 7), ('E', 6), ('D', 5), ('C', 4), ('B', 3)], 'A')
]

@pytest.mark.parametrize("i", range(len(test_cases)))
def test_DeQueue(i):
    queue = test_cases[i][0]
    expected = test_cases[i][1]
    assert DeQueue(queue) == test_cases[i][2]
    assert queue == expected